[{"role": "user", "content": "Act as a schema matcher for relational schemas. Your task is to create semantic matches that specify how the elements of the source schema and the target schema semantically correspond to one another. Two attributes semantically match if and only if there exists an invertible function that maps all values of one attribute to the other. First, I will input the name of an attribute from the source schema, a description of the attribute, the name of the relation in belongs to and a description of this relation. After that, I will input the same information of a single relation and a single attribute from the target schema."}, {"role": "user", "content": "The attribute from the source schema is the following:\nAttribute name: '{{source_attribute.name}}'\nAttribute description: '{{source_attribute.description}}'\nRelation name: '{{source_relation.name}}'\nRelation description: '{{source_relation.description}}'"}, {"role": "user", "content": "The attribute from the target schema is the following:\nRelation name: '{{target_relation.name}}'\nRelation description: '{{target_relation.description}}'\nAttribute name: '{{target_attribute.name}}'\nAttribute description: '{{target_attribute.description}}'"}, {"role": "user", "content": "Explain whether '{{source_attribute.name}}' from '{{source_relation.name}}' of the source schema semantically match to '{{target_attribute.name}}' from '{{target_relation.name}}' of the target schema.. Lets work this out step by step to make sure we get it correct. After your explanation, give a final decision JSON-formatted like this: `{ \"yes\": [], \"no\": [] }`. Under each of the following keys, list '{{target_attribute.name}}' if it applies: yes - if there is an invertible function that maps all values of the source attribute to the values of the target attribute; no - if there is no such function. Do not mention the attribute if there is not enough information to decide."}]